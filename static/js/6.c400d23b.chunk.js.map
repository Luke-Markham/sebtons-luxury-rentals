{"version":3,"sources":["redux/contactForm/contact-form.actions.js","components/checkbox-input/checkbox-input.component.jsx","components/general-form-input/general-form-input.component.jsx","sections/contact-form/contact-form.component.jsx","components/contact-form-success-card/contact-form-success-component.jsx","pages/contact-page/contact-page.component.jsx","firebase/firebase.utils.js","components/button/button.component.jsx"],"names":["displayFormSuccessMessage","decision","type","payload","CheckboxInput","name","id","text","labelFor","checked","onChange","className","htmlFor","GeneralformInput","value","required","connect","dispatch","useState","first_name","surname","phone","email","chauffeur","childcare_nannies","chef","catering","spa_massage","boat_rental","charters","scuba_diving","fishing","requests","formState","setFormState","handleSubmit","e","date","Date","toString","preventDefault","firestore","collection","doc","set","then","catch","error","alert","console","log","handleFields","target","useTransition","config","duration","from","opacity","enter","leave","map","item","key","props","div","style","onSubmit","rows","placeholder","btnClass","typeOfBtn","state","showFormSuccessMessage","contactForm","useEffect","setTimeout","transform","onClick","window","scrollTo","left","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Btn"],"mappings":"iSAAaA,G,OAA4B,SAAAC,GACvC,MAAO,CACLC,KAAM,+BACNC,QAASF,K,QCkBEG,G,OAlBO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1D,OACE,yBAAKC,UAAU,kBACb,2BACEA,UAAU,iBACVT,KAAK,WACLG,KAAMA,EACNC,GAAIA,EACJG,QAASA,EACTC,SAAUA,IAEZ,2BAAOC,UAAU,uBAAuBC,QAASJ,GAC9CD,MCiBMM,G,OA7BU,SAAC,GASnB,IARLX,EAQI,EARJA,KACAG,EAOI,EAPJA,KACAC,EAMI,EANJA,GACAQ,EAKI,EALJA,MACAC,EAII,EAJJA,SACAP,EAGI,EAHJA,SACAD,EAEI,EAFJA,KACAG,EACI,EADJA,SAEA,OACE,yBAAKC,UAAU,SACb,2BAAOA,UAAU,2BAA2BC,QAASJ,GAClDD,GAEH,6BACA,2BACEI,UAAU,qBACVT,KAAMA,EACNG,KAAMA,EACNC,GAAIA,EACJQ,MAAOA,EACPC,SAAUA,EACVL,SAAUA,O,ykBChBlB,IAqNeM,cACb,MANyB,SAAAC,GAAQ,MAAK,CACtCjB,0BAA2B,SAAAC,GAAQ,OACjCgB,EAASjB,EAA0BC,QAGxBe,EArNK,SAAC,GAAmC,IAAjChB,EAAgC,EAAhCA,0BAAgC,EACnBkB,mBAAS,CACzCC,WAAY,GACZC,QAAS,GACTC,MAAO,IACPC,MAAO,GACPC,WAAW,EACXC,mBAAmB,EACnBC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,SAAU,KAfyC,mBAC9CC,EAD8C,KACnCC,EADmC,KAkB/CC,EAAe,SAAAC,GACnB,IAAMC,GAAO,IAAIC,MAAOC,WACxBH,EAAEI,iBACFC,IACGC,WAAW,YACXC,IAFH,UAEUV,EAAUd,WAAa,IAAMc,EAAUb,QAAU,IAAMiB,IAC9DO,IAHH,KAGYX,IACTY,KAAK7C,GAA0B,IAC/B8C,OAAM,SAASC,GACdC,MAAM,iDACNC,QAAQC,IAAIH,MAEhB/C,GAA0B,GAE1BkC,EAAa,CACXf,WAAY,GACZC,QAAS,GACTC,MAAO,IACPC,MAAO,GACPC,WAAW,EACXC,mBAAmB,EACnBC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,SAAU,MAIRmB,EAAe,SAAAf,GACnB,IAAMtB,EACc,aAAlBsB,EAAEgB,OAAOlD,KAAsBkC,EAAEgB,OAAO3C,QAAU2B,EAAEgB,OAAOtC,MACvDT,EAAO+B,EAAEgB,OAAO/C,KACtB6B,EAAa,EAAD,GAAMD,EAAN,eAAkB5B,EAAOS,MASvC,OAPkBuC,aAAc,EAAM,KAAM,CAC1CC,OAAQ,CAAEC,SAAU,MACpBC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGHG,KACf,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,MAAd,OACEF,GACE,kBAAC,IAASG,IAAV,CAAcF,IAAKA,EAAKG,MAAOF,GAC7B,0BAAMpD,UAAU,yBAAyBuD,SAAU/B,GACjD,8BAAUxB,UAAU,WAClB,gDACA,kBAAC,EAAD,CACET,KAAK,OACLG,KAAK,aACLC,GAAG,aACHE,SAAS,aACTO,UAAU,EACVR,KAAK,cACLO,MAAOmB,EAAUd,WACjBT,SAAUyC,IAEZ,kBAAC,EAAD,CACEjD,KAAK,OACLG,KAAK,UACLC,GAAG,UACHE,SAAS,UACTO,UAAU,EACVR,KAAK,WACLO,MAAOmB,EAAUb,QACjBV,SAAUyC,IAEZ,kBAAC,EAAD,CACEjD,KAAK,QACLG,KAAK,QACLC,GAAG,QACHE,SAAS,QACTO,UAAU,EACVR,KAAK,SACLO,MAAOmB,EAAUZ,MACjBX,SAAUyC,IAEZ,kBAAC,EAAD,CACEjD,KAAK,QACLG,KAAK,QACLC,GAAG,QACHE,SAAS,QACTO,UAAU,EACVR,KAAK,SACLO,MAAOmB,EAAUX,MACjBZ,SAAUyC,KAGd,8BAAUxC,UAAU,WAClB,6CACA,kBAAC,EAAD,CACEN,KAAK,YACLC,GAAG,YACHE,SAAS,YACTD,KAAK,YACLG,SAAUyC,EACV1C,QAASwB,EAAUV,YAErB,kBAAC,EAAD,CACElB,KAAK,oBACLC,GAAG,oBACHE,SAAS,oBACTD,KAAK,oBACLG,SAAUyC,EACV1C,QAASwB,EAAUT,oBAErB,kBAAC,EAAD,CACEnB,KAAK,OACLC,GAAG,OACHE,SAAS,OACTD,KAAK,gBACLG,SAAUyC,EACV1C,QAASwB,EAAUR,OAErB,kBAAC,EAAD,CACEpB,KAAK,WACLC,GAAG,WACHE,SAAS,WACTD,KAAK,WACLG,SAAUyC,EACV1C,QAASwB,EAAUP,WAErB,kBAAC,EAAD,CACErB,KAAK,cACLC,GAAG,cACHE,SAAS,cACTD,KAAK,gBACLG,SAAUyC,EACV1C,QAASwB,EAAUN,cAErB,kBAAC,EAAD,CACEtB,KAAK,cACLC,GAAG,cACHE,SAAS,cACTD,KAAK,cACLG,SAAUyC,EACV1C,QAASwB,EAAUL,cAErB,kBAAC,EAAD,CACEvB,KAAK,WACLC,GAAG,WACHE,SAAS,WACTD,KAAK,UACLG,SAAUyC,EACV1C,QAASwB,EAAUJ,WAErB,kBAAC,EAAD,CACExB,KAAK,eACLC,GAAG,eACHE,SAAS,eACTD,KAAK,eACLG,SAAUyC,EACV1C,QAASwB,EAAUH,eAErB,kBAAC,EAAD,CACEzB,KAAK,UACLC,GAAG,UACHE,SAAS,UACTD,KAAK,UACLG,SAAUyC,EACV1C,QAASwB,EAAUF,WAGvB,8BAAUpB,UAAU,YAClB,4CACA,8BACEN,KAAK,WACLC,GAAG,WACH6D,KAAK,KACLrD,MAAOmB,EAAUD,SACjBtB,SAAUyC,EACViB,YAAY,6HAGhB,kBAAC,IAAD,CACEC,SAAS,0BACTC,UAAU,SACV/D,KAAK,iB,iBC1JJS,eAJS,SAAAuD,GAAK,MAAK,CAChCC,uBAAwBD,EAAME,YAAYD,2BANjB,SAAAvD,GAAQ,MAAK,CACtCjB,0BAA2B,SAAAC,GAAQ,OACjCgB,EAASjB,EAA0BC,QAOxBe,EAlDe,SAAC,GAGxB,IAFLhB,EAEI,EAFJA,0BACAwE,EACI,EADJA,uBAWA,OATAE,qBAAU,WACRC,YAAW,kBAAM3E,GAA0B,KAAQ,OAClD,CAACA,IAEeqD,YAAcmB,EAAwB,KAAM,CAC7DhB,KAAM,CAAEoB,UAAW,oBACnBlB,MAAO,CAAEkB,UAAW,kBACpBjB,MAAO,CAAEiB,UAAW,sBAEJhB,KAChB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,MAAd,OACEF,GACE,kBAAC,IAASG,IAAV,CAAcF,IAAKA,EAAKG,MAAOF,GAC7B,yBAAKpD,UAAU,uCACb,kBAAC,IAAD,CACEA,UAAU,4BACVkE,QAAS,kBAAM7E,GAA0B,MAE3C,uBAAGW,UAAU,mCAAb,aACA,uBAAGA,UAAU,oCAAb,+CAGA,uBAAGA,UAAU,oCAAb,0IAKA,uBAAGA,UAAU,oCAAb,gBAEE,6BACA,+CChBCK,uBAHS,SAAAuD,GAAK,MAAK,CAChCC,uBAAwBD,EAAME,YAAYD,0BAE7BxD,EAjBK,SAAC,GAAgC,IAA9BwD,EAA6B,EAA7BA,uBAKrB,OAJAE,qBAAU,WACRI,OAAOC,SAAS,EAAG,KAClB,IAGD,6BAASpE,UAAU,0BACjB,kBAAC,IAAD,CAAMqE,MAAI,GACR,wBAAIrE,UAAU,sBAAd,YAED6D,EAAyB,kBAAC,EAAD,MAA4B,kBAAC,EAAD,W,gCCjB5D,oDAcAS,gBAX8B,CAC5BC,OAAQ,0CACRC,WAAY,0BACZC,YAAa,iCACbC,UAAW,UACXC,cAAe,GACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAIV,IAAMhD,EAAYwC,e,gCCfzB,0BAUeS,IARH,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,UAAW/D,EAAqB,EAArBA,KAAM8D,EAAe,EAAfA,SAC9B,OACE,4BAAQ1D,UAAW0D,GAAsB,SAAUnE,KAAMoE,GACtD/D,K","file":"static/js/6.c400d23b.chunk.js","sourcesContent":["export const displayFormSuccessMessage = decision => {\n  return {\n    type: \"DISPLAY_FORM_SUCCESS_MESSAGE\",\n    payload: decision\n  };\n};\n","import React from \"react\";\nimport \"./checkbox-input.styles.scss\";\n\nconst CheckboxInput = ({ name, id, text, labelFor, checked, onChange }) => {\n  return (\n    <div className=\"checkbox-group\">\n      <input\n        className=\"checkbox-input\"\n        type=\"checkbox\"\n        name={name}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n      />\n      <label className=\"checkbox-input-label\" htmlFor={labelFor}>\n        {text}\n      </label>\n    </div>\n  );\n};\n\nexport default CheckboxInput;\n","import React from \"react\";\nimport \"./general-form-input.styles.scss\";\n\nconst GeneralformInput = ({\n  type,\n  name,\n  id,\n  value,\n  required,\n  labelFor,\n  text,\n  onChange\n}) => {\n  return (\n    <div className=\"group\">\n      <label className=\"general-form-input-label\" htmlFor={labelFor}>\n        {text}\n      </label>\n      <br />\n      <input\n        className=\"general-form-input\"\n        type={type}\n        name={name}\n        id={id}\n        value={value}\n        required={required}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default GeneralformInput;\n","import React, { useState } from \"react\";\nimport \"./contact-form.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { displayFormSuccessMessage } from \"../../redux/contactForm/contact-form.actions\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport CheckboxInput from \"../../components/checkbox-input/checkbox-input.component\";\nimport GeneralFormInput from \"../../components/general-form-input/general-form-input.component\";\nimport Btn from \"../../components/button/button.component\";\nimport { animated, useTransition } from \"react-spring\";\n\nconst ContactForm = ({ displayFormSuccessMessage }) => {\n  const [formState, setFormState] = useState({\n    first_name: \"\",\n    surname: \"\",\n    phone: \" \",\n    email: \"\",\n    chauffeur: false,\n    childcare_nannies: false,\n    chef: false,\n    catering: false,\n    spa_massage: false,\n    boat_rental: false,\n    charters: false,\n    scuba_diving: false,\n    fishing: false,\n    requests: \"\"\n  });\n\n  const handleSubmit = e => {\n    const date = new Date().toString();\n    e.preventDefault();\n    firestore\n      .collection(\"messages\")\n      .doc(`${formState.first_name + \" \" + formState.surname + \" \" + date}`)\n      .set({ ...formState })\n      .then(displayFormSuccessMessage(true))\n      .catch(function(error) {\n        alert(\"Sorry there was a problem, please try again. \");\n        console.log(error);\n      });\n    displayFormSuccessMessage(true);\n\n    setFormState({\n      first_name: \"\",\n      surname: \"\",\n      phone: \" \",\n      email: \"\",\n      chauffeur: false,\n      childcare_nannies: false,\n      chef: false,\n      catering: false,\n      spa_massage: false,\n      boat_rental: false,\n      charters: false,\n      scuba_diving: false,\n      fishing: false,\n      requests: \"\"\n    });\n  };\n\n  const handleFields = e => {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    const name = e.target.name;\n    setFormState({ ...formState, [name]: value });\n  };\n  const fadeInOut = useTransition(true, null, {\n    config: { duration: 1100 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  });\n\n  return fadeInOut.map(\n    ({ item, key, props }) =>\n      item && (\n        <animated.div key={key} style={props}>\n          <form className=\"contact-form-container\" onSubmit={handleSubmit}>\n            <fieldset className=\"details\">\n              <legend>Your Details</legend>\n              <GeneralFormInput\n                type=\"text\"\n                name=\"first_name\"\n                id=\"first_name\"\n                labelFor=\"first_name\"\n                required={true}\n                text=\"First Name:\"\n                value={formState.first_name}\n                onChange={handleFields}\n              />\n              <GeneralFormInput\n                type=\"text\"\n                name=\"surname\"\n                id=\"surname\"\n                labelFor=\"surname\"\n                required={true}\n                text=\"Surname:\"\n                value={formState.surname}\n                onChange={handleFields}\n              />\n              <GeneralFormInput\n                type=\"phone\"\n                name=\"phone\"\n                id=\"phone\"\n                labelFor=\"phone\"\n                required={true}\n                text=\"Phone:\"\n                value={formState.phone}\n                onChange={handleFields}\n              />\n              <GeneralFormInput\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                labelFor=\"email\"\n                required={true}\n                text=\"Email:\"\n                value={formState.email}\n                onChange={handleFields}\n              />\n            </fieldset>\n            <fieldset className=\"options\">\n              <legend>Optionals</legend>\n              <CheckboxInput\n                name=\"chauffeur\"\n                id=\"chauffeur\"\n                labelFor=\"chauffeur\"\n                text=\"Chauffeur\"\n                onChange={handleFields}\n                checked={formState.chauffeur}\n              />\n              <CheckboxInput\n                name=\"childcare_nannies\"\n                id=\"childcare_nannies\"\n                labelFor=\"childcare_nannies\"\n                text=\"Childcare/Nannies\"\n                onChange={handleFields}\n                checked={formState.childcare_nannies}\n              />\n              <CheckboxInput\n                name=\"chef\"\n                id=\"chef\"\n                labelFor=\"chef\"\n                text=\"In House Chef\"\n                onChange={handleFields}\n                checked={formState.chef}\n              />\n              <CheckboxInput\n                name=\"catering\"\n                id=\"catering\"\n                labelFor=\"catering\"\n                text=\"Catering\"\n                onChange={handleFields}\n                checked={formState.catering}\n              />\n              <CheckboxInput\n                name=\"spa_massage\"\n                id=\"spa_massage\"\n                labelFor=\"spa_massage\"\n                text=\"Spa & Massage\"\n                onChange={handleFields}\n                checked={formState.spa_massage}\n              />\n              <CheckboxInput\n                name=\"boat_rental\"\n                id=\"boat_rental\"\n                labelFor=\"boat_rental\"\n                text=\"Boat Rental\"\n                onChange={handleFields}\n                checked={formState.boat_rental}\n              />\n              <CheckboxInput\n                name=\"charters\"\n                id=\"charters\"\n                labelFor=\"charters\"\n                text=\"Charter\"\n                onChange={handleFields}\n                checked={formState.charters}\n              />\n              <CheckboxInput\n                name=\"scuba_diving\"\n                id=\"scuba_diving\"\n                labelFor=\"scuba_diving\"\n                text=\"Scuba Diving\"\n                onChange={handleFields}\n                checked={formState.scuba_diving}\n              />\n              <CheckboxInput\n                name=\"fishing\"\n                id=\"fishing\"\n                labelFor=\"fishing\"\n                text=\"Fishing\"\n                onChange={handleFields}\n                checked={formState.fishing}\n              />\n            </fieldset>\n            <fieldset className=\"requests\">\n              <legend>Requests</legend>\n              <textarea\n                name=\"requests\"\n                id=\"requests\"\n                rows=\"10\"\n                value={formState.requests}\n                onChange={handleFields}\n                placeholder=\"Please state which property your interested in by name and mention any service you'd like to book or know more about...\"\n              ></textarea>\n            </fieldset>\n            <Btn\n              btnClass=\"contact-form-submit-btn\"\n              typeOfBtn=\"submit\"\n              text=\"Send\"\n            />\n          </form>\n        </animated.div>\n      )\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  displayFormSuccessMessage: decision =>\n    dispatch(displayFormSuccessMessage(decision))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ContactForm);\n","import React, { useEffect } from \"react\";\nimport \"./contact-form-success.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { displayFormSuccessMessage } from \"../../redux/contactForm/contact-form.actions\";\nimport { animated, useTransition } from \"react-spring\";\nimport { ReactComponent as CloseSuccessMessage } from \"../../assets/svg/closeNav.svg\";\nconst FormSubmitSuccessCard = ({\n  displayFormSuccessMessage,\n  showFormSuccessMessage\n}) => {\n  useEffect(() => {\n    setTimeout(() => displayFormSuccessMessage(false), 8000);\n  }, [displayFormSuccessMessage]);\n\n  const slideInOut = useTransition(showFormSuccessMessage, null, {\n    from: { transform: \"translateX(100%)\" },\n    enter: { transform: \"translateX(0%)\" },\n    leave: { transform: \"translateX(100%)\" }\n  });\n  return slideInOut.map(\n    ({ item, key, props }) =>\n      item && (\n        <animated.div key={key} style={props}>\n          <div className=\"contact-form-success-card-container\">\n            <CloseSuccessMessage\n              className=\"close-success-message-btn\"\n              onClick={() => displayFormSuccessMessage(false)}\n            />\n            <p className=\"contact-form-success-card-title\">Thank You</p>\n            <p className=\"contact-form-success-card-text-1\">\n              We have successfully received your message.\n            </p>\n            <p className=\"contact-form-success-card-text-2\">\n              One of our team will be in contact with you within the next hour\n              about any properties or specific details you may have enquired\n              about.\n            </p>\n            <p className=\"contact-form-success-card-text-3\">\n              Kind Regards,\n              <br />\n              <i>Sebtons</i>\n            </p>\n          </div>\n        </animated.div>\n      )\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  displayFormSuccessMessage: decision =>\n    dispatch(displayFormSuccessMessage(decision))\n});\n\nconst mapStateToProps = state => ({\n  showFormSuccessMessage: state.contactForm.showFormSuccessMessage\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormSubmitSuccessCard);\n","import React, { useEffect } from \"react\";\nimport \"./contact-page.styles.scss\";\nimport { connect } from \"react-redux\";\nimport Fade from \"react-reveal/Fade\";\nimport ContactForm from \"../../sections/contact-form/contact-form.component\";\nimport FormSubmitSuccessCard from \"../../components/contact-form-success-card/contact-form-success-component\";\n\nconst ContactPage = ({ showFormSuccessMessage }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <section className=\"contact-page-container\">\n      <Fade left>\n        <h2 className=\"contact-page-title\">Contact</h2>\n      </Fade>\n      {showFormSuccessMessage ? <FormSubmitSuccessCard /> : <ContactForm />}\n    </section>\n  );\n};\nconst mapStateToProps = state => ({\n  showFormSuccessMessage: state.contactForm.showFormSuccessMessage\n});\nexport default connect(mapStateToProps)(ContactPage);\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyDX0CMo94Nhb6UBPA4Q9IQzpwYNrYMTHnw\",\n  authDomain: \"sebtons.firebaseapp.com\",\n  databaseURL: \"https://sebtons.firebaseio.com\",\n  projectId: \"sebtons\",\n  storageBucket: \"\",\n  messagingSenderId: \"49894577074\",\n  appId: \"1:49894577074:web:d6eadd04075fca88d0caab\",\n  measurementId: \"G-3RSK3GH2F1\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firestore = firebase.firestore();\n","import React from \"react\";\nimport \"./button.styles.scss\";\nconst Btn = ({ typeOfBtn, text, btnClass }) => {\n  return (\n    <button className={btnClass ? btnClass : \"button\"} type={typeOfBtn}>\n      {text}\n    </button>\n  );\n};\n\nexport default Btn;\n"],"sourceRoot":""}